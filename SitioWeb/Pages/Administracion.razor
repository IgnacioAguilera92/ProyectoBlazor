@page "/administracion"
@inject Principal Principal
<div class="user-info">
    @* UNA VEZ LOGEADO
    <img src="img/user.svg" />
    <div>
    <a href="authentication/profile" class="username">ADMINISTRADOR</a>
    <button class="btn btn-link sign-out">Sign out</button>
    </div> *@
    @*<a class="sign-in" href="authentication/register">Registrarse</a>*@

    <MostrarAlerta @ref="Alert" />
@*     <div id="cart" class="cart" data-totalitems="0">
        <i class="fas fa-shopping-cart"></i>
    </div> *@

    <div class="shopping">
        <div id="cart" class="cart" data-totalitems="0">
            <i class="fas fa-shopping-cart"></i>
        </div>        
        <span class="quantity">
            @if (Principal.Carrito?.Productos.Count > 0)
            {
                @Principal.Carrito.Productos.Count
            }   
            else
            {
                @(0) //DEFAULT
            }
        </span>
    </div>
    <a class="sign-in clear" @onclick="Limpiar"><i class="fa-solid fa-trash" style="font-size:21px"></i></a>
    <a class="sign-in add" @onclick="AgregarProducto">TEST +</a>
    <a class="sign-in" href="authentication/login" style="width: 140px;height: 46px;">Iniciar Sesión</a>
</div>

@code {
    [Parameter] public EventCallback OnEvento { get; set; }
    private MostrarAlerta Alert;
    public void AgregarProducto()
    {
        var productos = Principal.GetProductos();
        if (productos?.Count > 0)
        {
            var ultimoId = productos.LastOrDefault().IdProducto + 1;

            Random random = new Random();
            int numeroRandom = random.Next(10000, 50001);
            int stockRandom = random.Next(1, 10);
            var producto = Principal.GetProducto(ultimoId, numeroRandom, stockRandom);
            Principal.AgregarProducto(producto);
        }
    }
    public void Limpiar()
    {
        var productos = Principal.GetProductos();
        if (productos?.Count > 4)
        {
            Principal.Limpiar();
            OnEvento.InvokeAsync(null);
            Alert.ShowAlert("Productos Eliminados","Se han eliminado todos los productos menos los principales.", "success");
        }
        else if(productos?.Count == 4)
        {
            Alert.ShowAlert("Informativo", "No se ha podido eliminar los productos, los productos principales no se eliminan.", "warning");
        }
    }    
    protected override void OnInitialized()
    {
        // Suscribirse al evento de cambio para actualizar el componente
        Principal.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        // Desuscribirse del evento para evitar fugas de memoria
        Principal.OnChange -= StateHasChanged;
    }
}
<!--CSS-->
<style>
    .shopping {
        position: relative;
        text-align: right;
    }

        .shopping img {
            width: 40px;
        }

        .shopping span {
            background: red;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #fff;
            position: absolute;
            top: -5px;
            left: 60%;
            padding: 3px 10px;
        }
    .user-info {
        margin-left: auto;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
    }

        .user-info img {
            margin-right: 0.7rem;
            width: 2.6rem;
        }

        .user-info .username {
            display: block;
            font-weight: 700;
            line-height: 0.7rem;
            margin-top: 0.5rem;
            color: white;
            font-size: 1rem;
        }

        .user-info a {
            color: #fff2cc;
            font-size: 0.8rem;
        }

        .user-info button.sign-out {
            color: #fff2cc;
            font-size: 0.8rem;
            padding: 0;
        }

    a.sign-in {
        background: none;
        border: 1.5px solid white;
        border-radius: 0.7em;
        color: white;
        text-transform: uppercase;
        padding: 0.8rem 1.6rem 0.7rem 1.6rem;
        font-family: 'Bahnschrift', Arial, Helvetica, sans-serif;
        font-weight: 100;
        cursor: pointer;
        transition: 0.2s ease-out;
        margin-left: 3px;
        width: 140px;
        height: 46px;
    }

        a.sign-in:hover {
            background-color: rgba(255,255,255,0.3);
            color: #fff2cc;
            border-color: #fff2cc;
        }

        a.clear {
            width: 69px;
            height: 46px;
        }

        a.add {
            width: 95px;
            height: 46px;
        }        
</style>
