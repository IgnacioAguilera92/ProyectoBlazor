@using Entidades
@inject IJSRuntime JS

@code {
        public async void ShowAlert(string titulo, string mensaje, string icono)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                title = titulo,
                text = mensaje,
                icon = icono, // Puedes cambiar "success" por "warning", "error", "info", etc.
                confirmButtonText = "Aceptar"
            });
        }

        public async Task<bool> ConfirmAlert(string titulo, string mensaje, string icono, string img = null)
        {
            if(img == null)
            {
                img = "https://cdn-icons-png.flaticon.com/512/5952/5952781.png";
            }
            bool isConfirmed = await JS.InvokeAsync<bool>("ConfirmAlert", titulo, mensaje, icono, img);

            if (isConfirmed)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        public async Task<bool> ConfirmAlertGreen(string titulo, string mensaje, string icono, string img)
        {
            bool isConfirmed = await JS.InvokeAsync<bool>("ConfirmAlertGreen", titulo, mensaje, icono, img);

            if (isConfirmed)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        public async void DefaultAlert(string titulo, string mensaje, string icono)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                position = "center",
                imageUrl = "https://i.gifer.com/1FA.gif",
                imageWidth = 320,
                imageHeight = 270,
                title = titulo,
                text = mensaje,
                showConfirmButton = false,
                timer = 2500
            });
        }
        public async Task CustomAlert(string titulo, string mensaje, string icono, Order carrito, string imgUrl)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                html = HtmlCarrito(titulo, mensaje, carrito, imgUrl),
                position = "top-end",
                showClass = new
                {
                    popup = "animate__animated animate__fadeInRight animate__faster"
                },
                hideClass = new
                {
                    popup = "animate__animated animate__fadeOutRight animate__faster"
                },
                grow = "column",
                width = "32%", // Ajuste dinámico al 90% del ancho de la pantalla   
                showConfirmButton = false,
                showCloseButton = true,
                background = "rgb(0 0 0)", //FONDO SWAL
                color = "#ffffff", // COLOR LETRA
                timer = 2300,
                customClass = new
                {
                    title = "swal-title", // CSS DE ACÁ
                    image = "swal-image" // CSS DE ACÁ
                }
            });
        }
        public string HtmlCarrito(string titulo, string mensaje, Order carrito, string imgUrl)
        {
            var totalCarrito = carrito.Productos.Sum(p => p.Valor);
            var totalCarritoPesos = totalCarrito.ToString("N0", new System.Globalization.CultureInfo("es-CL"));

            string html = $@"
            <center>
            <img src='{imgUrl}'
                 style='width:75%; height:60%; margin-bottom:20px;'>
            <h2 style='margin-bottom:0;'>{titulo}</h2>
                <img id='myGif' src='https://i.pinimg.com/originals/70/a5/52/70a552e8e955049c8587b2d7606cd6a6.gif' style='width:70%; height:70%;'>
                <br>
            <span class='price' style='margin-bottom:2%'>Valor: {mensaje}</span>   
            <h3 style='margin-top: 10px;'>Total carrito: ${totalCarritoPesos}</h3>
            </center>";

            return html;
        }
}
<script>
    function ConfirmAlert(titulo, mensaje, icono, img) {
        return Swal.fire({
            title: titulo,
            text: "",
            imageUrl: img,
            imageWidth: 200,
            imageHeight: 170,
            showCancelButton: true,
            confirmButtonText: 'Remover del carrito  <i class="fa-solid fa-trash"> ',
            cancelButtonText: 'Seguir comprando',
            customClass: {
                confirmButton: 'btn btn-danger', 
                cancelButton: 'btn btn-secondary' 
            }
        }).then(result => {
            return result.isConfirmed;
        });
    }
    function ConfirmAlertGreen(titulo, mensaje, icono, img) {
        return Swal.fire({
            title: titulo,
            text: "",
            imageUrl: img,
            imageWidth: 300,
            imageHeight: 170,
            showCancelButton: true,
            confirmButtonText: 'Agregar producto  <i class="fa-solid fa-plus"> ',
            cancelButtonText: 'No todavía',
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-secondary'
            }
        }).then(result => {
            return result.isConfirmed;
        });
     }
</script>
<style>
    .swal-title {
        margin-top: -11rem;
        height: 180px;
    }

    .swal-image {
        margin-top: -5rem;
    }

    .swal2-html-container .price {
        bottom: 0.5rem;
        right: 1rem;
        font-size: 2.5rem;
        font-weight: 700;
        padding: 0rem 0.7rem;
        border-radius: 4px;
        background-color: #08af08;
        color: white;
        line-height: 2rem;
        margin-top: -12rem !important;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@4/animate.min.css" />